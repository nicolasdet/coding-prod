#security:
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory: { memory: ~ }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: true
#
#            # activate different ways to authenticate
#
#            # http_basic: true
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: true
#            # https://symfony.com/doc/current/security/form_login_setup.html
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#    access_control:
#        # - { path: ^/admin, roles: ROLE_ADMIN }
#        # - { path: ^/profile, roles: ROLE_USER }


# security:
#     encoders:
#         FOS\UserBundle\Model\UserInterface: bcrypt

#     role_hierarchy:
#         ROLE_ADMIN:       ROLE_USER
#         ROLE_SUPER_ADMIN: ROLE_ADMIN

#     # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#     providers:
#         fos_userbundle:
#             id: fos_user.user_provider.username

#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             pattern: ^/
#             form_login:
#                 provider: fos_userbundle
#                 csrf_token_generator: security.csrf.token_manager

#             logout:       true
#             anonymous:    true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/admin/, role: ROLE_ADMIN }

# app/config/packages/security.yaml
# security:
#     encoders:
#         FOS\UserBundle\Model\UserInterface: bcrypt

#     role_hierarchy:
#         ROLE_READER: ROLE_USER
#         ROLE_ADMIN: ROLE_READER

#     providers:
#         fos_userbundle:
#             id: fos_user.user_provider.username_email

#     firewalls:
#         login:
#             pattern:  ^/api/login
#             stateless: true
#             anonymous: true
#             json_login:
#                 check_path:               /api/login_check
#                 success_handler:          lexik_jwt_authentication.handler.authentication_success
#                 failure_handler:          lexik_jwt_authentication.handler.authentication_failure

#         api:
#             pattern:   ^/api
#             stateless: true
#             guard:
#                 authenticators:
#                     - lexik_jwt_authentication.jwt_token_authenticator
#         main:
#             pattern:   ^/
#             provider: fos_userbundle
#             stateless: true
#             anonymous: true
#             guard:
#                 authenticators:
#                     - lexik_jwt_authentication.jwt_token_authenticator

#         dev:
#             pattern:  ^/(_(profiler|wdt)|css|images|js)/
#             security: false

#     access_control:
#         - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
 
    role_hierarchy:
        ROLE_READER: ROLE_USER
        ROLE_ADMIN: ROLE_READER
 
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
 
    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            form_login:
                check_path: /login_check
                username_parameter: _username
                password_parameter: _password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
 
        main:
            pattern: ^/
            provider: fos_userbundle
            stateless: true
            anonymous: true
            lexik_jwt: ~
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

 
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
 
    access_control:
        - { path: ^/api, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/books, roles: [ ROLE_READER ] }
        - { path: ^/, roles: [ ROLE_READER ] }